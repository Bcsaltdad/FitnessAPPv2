import streamlit as st
import sqlite3
import pandas as pd

# Database setup
conn = sqlite3.connect("workouts.db", check_same_thread=False)
cursor = conn.cursor()

cursor.execute("""
    CREATE TABLE IF NOT EXISTS workouts (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        client TEXT,
        date TEXT,
        exercise TEXT,
        sets INTEGER,
        reps INTEGER,
        weight FLOAT
    )
""")
conn.commit()

# Sidebar for adding workouts
st.sidebar.header("Log a Workout")
client_name = st.sidebar.text_input("Client Name")
date = st.sidebar.date_input("Date")
exercise = st.sidebar.text_input("Exercise")
sets = st.sidebar.number_input("Sets", min_value=1, value=3)
reps = st.sidebar.number_input("Reps", min_value=1, value=10)
weight = st.sidebar.number_input("Weight (kg)", min_value=0.0, value=20.0)

if st.sidebar.button("Add Workout"):
    cursor.execute(
        "INSERT INTO workouts (client, date, exercise, sets, reps, weight) VALUES (?, ?, ?, ?, ?, ?)",
        (client_name, date, exercise, sets, reps, weight),
    )
    conn.commit()
    st.sidebar.success("Workout added!")

# Main UI
st.title("Workout Tracker ðŸ“Š")

df = pd.read_sql_query("SELECT * FROM workouts", conn)

if not df.empty:
    # Interactive Data Table
    st.subheader("Workout Log")
    df_display = df.drop(columns=["id"])  # Hide ID column for cleaner view
    st.data_editor(df_display, use_container_width=True, height=300)

    # Summary Stats
    st.subheader("Workout Statistics")
    col1, col2, col3 = st.columns(3)
    col1.metric("Total Sets", df["sets"].sum())
    col2.metric("Total Reps", df["reps"].sum())
    col3.metric("Total Volume (kg)",
                (df["sets"] * df["reps"] * df["weight"]).sum())

    # Per-client workout summary
    st.subheader("Client Summaries")
    clients = df["client"].unique()
    for client in clients:
        with st.expander(f"ðŸ“Œ {client}'s Workouts"):
            client_df = df[df["client"] == client].drop(columns=["id"])
            st.data_editor(client_df, use_container_width=True, height=250)

else:
    st.info("No workouts logged yet. Start by adding a workout!")

# Close database connection
conn.close()
